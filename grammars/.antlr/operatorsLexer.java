// Generated from /home/phantom/OneDrive_personal/Documents/School/PoPL/Project/grammars/operators.g4 by ANTLR 4.13.1
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue", "this-escape"})
public class operatorsLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.13.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		ASSIGNMENT_OP=1, ARITHMETIC_OP=2, LBRACKET=3, RBRACKET=4, COMMA=5, IF=6, 
		ELIF=7, ELSE=8, COLON=9, LPAREN=10, RPAREN=11, COMPARISON_OP=12, LOGICAL_OP=13, 
		NOT_OP=14, WHILE=15, FOR=16, NUMBER=17, BOOLEAN=18, STRING=19, ESC=20, 
		VARIABLE=21, WS=22, NEWLINE=23;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"ASSIGNMENT_OP", "ARITHMETIC_OP", "LBRACKET", "RBRACKET", "COMMA", "IF", 
			"ELIF", "ELSE", "COLON", "LPAREN", "RPAREN", "COMPARISON_OP", "LOGICAL_OP", 
			"NOT_OP", "WHILE", "FOR", "NUMBER", "BOOLEAN", "STRING", "ESC", "VARIABLE", 
			"WS", "NEWLINE"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, null, null, "'['", "']'", "','", "'if'", "'elif'", "'else'", "':'", 
			"'('", "')'", null, null, "'not'", "'while'", "'for'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "ASSIGNMENT_OP", "ARITHMETIC_OP", "LBRACKET", "RBRACKET", "COMMA", 
			"IF", "ELIF", "ELSE", "COLON", "LPAREN", "RPAREN", "COMPARISON_OP", "LOGICAL_OP", 
			"NOT_OP", "WHILE", "FOR", "NUMBER", "BOOLEAN", "STRING", "ESC", "VARIABLE", 
			"WS", "NEWLINE"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public operatorsLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "operators.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000\u0017\u00c1\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002"+
		"\u0001\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002"+
		"\u0004\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002"+
		"\u0007\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002"+
		"\u000b\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e"+
		"\u0002\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011"+
		"\u0002\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014"+
		"\u0002\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0001\u0000\u0001\u0000"+
		"\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000"+
		"\u0001\u0000\u0003\u00009\b\u0000\u0001\u0001\u0001\u0001\u0001\u0002"+
		"\u0001\u0002\u0001\u0003\u0001\u0003\u0001\u0004\u0001\u0004\u0001\u0005"+
		"\u0001\u0005\u0001\u0005\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006"+
		"\u0001\u0006\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007"+
		"\u0001\b\u0001\b\u0001\t\u0001\t\u0001\n\u0001\n\u0001\u000b\u0001\u000b"+
		"\u0001\u000b\u0001\u000b\u0001\u000b\u0001\u000b\u0001\u000b\u0001\u000b"+
		"\u0001\u000b\u0001\u000b\u0003\u000b`\b\u000b\u0001\f\u0001\f\u0001\f"+
		"\u0001\f\u0001\f\u0003\fg\b\f\u0001\r\u0001\r\u0001\r\u0001\r\u0001\u000e"+
		"\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000f"+
		"\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u0010\u0003\u0010x\b\u0010"+
		"\u0001\u0010\u0004\u0010{\b\u0010\u000b\u0010\f\u0010|\u0001\u0010\u0001"+
		"\u0010\u0004\u0010\u0081\b\u0010\u000b\u0010\f\u0010\u0082\u0003\u0010"+
		"\u0085\b\u0010\u0001\u0011\u0001\u0011\u0001\u0011\u0001\u0011\u0001\u0011"+
		"\u0001\u0011\u0001\u0011\u0001\u0011\u0001\u0011\u0003\u0011\u0090\b\u0011"+
		"\u0001\u0012\u0001\u0012\u0001\u0012\u0005\u0012\u0095\b\u0012\n\u0012"+
		"\f\u0012\u0098\t\u0012\u0001\u0012\u0001\u0012\u0001\u0012\u0001\u0012"+
		"\u0005\u0012\u009e\b\u0012\n\u0012\f\u0012\u00a1\t\u0012\u0001\u0012\u0003"+
		"\u0012\u00a4\b\u0012\u0001\u0013\u0001\u0013\u0001\u0013\u0001\u0014\u0001"+
		"\u0014\u0005\u0014\u00ab\b\u0014\n\u0014\f\u0014\u00ae\t\u0014\u0001\u0015"+
		"\u0004\u0015\u00b1\b\u0015\u000b\u0015\f\u0015\u00b2\u0001\u0016\u0003"+
		"\u0016\u00b6\b\u0016\u0001\u0016\u0005\u0016\u00b9\b\u0016\n\u0016\f\u0016"+
		"\u00bc\t\u0016\u0001\u0016\u0001\u0016\u0003\u0016\u00c0\b\u0016\u0000"+
		"\u0000\u0017\u0001\u0001\u0003\u0002\u0005\u0003\u0007\u0004\t\u0005\u000b"+
		"\u0006\r\u0007\u000f\b\u0011\t\u0013\n\u0015\u000b\u0017\f\u0019\r\u001b"+
		"\u000e\u001d\u000f\u001f\u0010!\u0011#\u0012%\u0013\'\u0014)\u0015+\u0016"+
		"-\u0017\u0001\u0000\b\u0004\u0000%%*+--//\u0001\u000009\u0002\u0000\""+
		"\"\\\\\u0002\u0000\'\'\\\\\b\u0000\"\"\'\'\\\\bbffnnrrtt\u0003\u0000A"+
		"Z__az\u0004\u000009AZ__az\u0001\u0000  \u00d9\u0000\u0001\u0001\u0000"+
		"\u0000\u0000\u0000\u0003\u0001\u0000\u0000\u0000\u0000\u0005\u0001\u0000"+
		"\u0000\u0000\u0000\u0007\u0001\u0000\u0000\u0000\u0000\t\u0001\u0000\u0000"+
		"\u0000\u0000\u000b\u0001\u0000\u0000\u0000\u0000\r\u0001\u0000\u0000\u0000"+
		"\u0000\u000f\u0001\u0000\u0000\u0000\u0000\u0011\u0001\u0000\u0000\u0000"+
		"\u0000\u0013\u0001\u0000\u0000\u0000\u0000\u0015\u0001\u0000\u0000\u0000"+
		"\u0000\u0017\u0001\u0000\u0000\u0000\u0000\u0019\u0001\u0000\u0000\u0000"+
		"\u0000\u001b\u0001\u0000\u0000\u0000\u0000\u001d\u0001\u0000\u0000\u0000"+
		"\u0000\u001f\u0001\u0000\u0000\u0000\u0000!\u0001\u0000\u0000\u0000\u0000"+
		"#\u0001\u0000\u0000\u0000\u0000%\u0001\u0000\u0000\u0000\u0000\'\u0001"+
		"\u0000\u0000\u0000\u0000)\u0001\u0000\u0000\u0000\u0000+\u0001\u0000\u0000"+
		"\u0000\u0000-\u0001\u0000\u0000\u0000\u00018\u0001\u0000\u0000\u0000\u0003"+
		":\u0001\u0000\u0000\u0000\u0005<\u0001\u0000\u0000\u0000\u0007>\u0001"+
		"\u0000\u0000\u0000\t@\u0001\u0000\u0000\u0000\u000bB\u0001\u0000\u0000"+
		"\u0000\rE\u0001\u0000\u0000\u0000\u000fJ\u0001\u0000\u0000\u0000\u0011"+
		"O\u0001\u0000\u0000\u0000\u0013Q\u0001\u0000\u0000\u0000\u0015S\u0001"+
		"\u0000\u0000\u0000\u0017_\u0001\u0000\u0000\u0000\u0019f\u0001\u0000\u0000"+
		"\u0000\u001bh\u0001\u0000\u0000\u0000\u001dl\u0001\u0000\u0000\u0000\u001f"+
		"r\u0001\u0000\u0000\u0000!w\u0001\u0000\u0000\u0000#\u008f\u0001\u0000"+
		"\u0000\u0000%\u00a3\u0001\u0000\u0000\u0000\'\u00a5\u0001\u0000\u0000"+
		"\u0000)\u00a8\u0001\u0000\u0000\u0000+\u00b0\u0001\u0000\u0000\u0000-"+
		"\u00bf\u0001\u0000\u0000\u0000/9\u0005=\u0000\u000001\u0005+\u0000\u0000"+
		"19\u0005=\u0000\u000023\u0005-\u0000\u000039\u0005=\u0000\u000045\u0005"+
		"*\u0000\u000059\u0005=\u0000\u000067\u0005/\u0000\u000079\u0005=\u0000"+
		"\u00008/\u0001\u0000\u0000\u000080\u0001\u0000\u0000\u000082\u0001\u0000"+
		"\u0000\u000084\u0001\u0000\u0000\u000086\u0001\u0000\u0000\u00009\u0002"+
		"\u0001\u0000\u0000\u0000:;\u0007\u0000\u0000\u0000;\u0004\u0001\u0000"+
		"\u0000\u0000<=\u0005[\u0000\u0000=\u0006\u0001\u0000\u0000\u0000>?\u0005"+
		"]\u0000\u0000?\b\u0001\u0000\u0000\u0000@A\u0005,\u0000\u0000A\n\u0001"+
		"\u0000\u0000\u0000BC\u0005i\u0000\u0000CD\u0005f\u0000\u0000D\f\u0001"+
		"\u0000\u0000\u0000EF\u0005e\u0000\u0000FG\u0005l\u0000\u0000GH\u0005i"+
		"\u0000\u0000HI\u0005f\u0000\u0000I\u000e\u0001\u0000\u0000\u0000JK\u0005"+
		"e\u0000\u0000KL\u0005l\u0000\u0000LM\u0005s\u0000\u0000MN\u0005e\u0000"+
		"\u0000N\u0010\u0001\u0000\u0000\u0000OP\u0005:\u0000\u0000P\u0012\u0001"+
		"\u0000\u0000\u0000QR\u0005(\u0000\u0000R\u0014\u0001\u0000\u0000\u0000"+
		"ST\u0005)\u0000\u0000T\u0016\u0001\u0000\u0000\u0000UV\u0005=\u0000\u0000"+
		"V`\u0005=\u0000\u0000WX\u0005!\u0000\u0000X`\u0005=\u0000\u0000Y`\u0005"+
		"<\u0000\u0000Z[\u0005<\u0000\u0000[`\u0005=\u0000\u0000\\`\u0005>\u0000"+
		"\u0000]^\u0005>\u0000\u0000^`\u0005=\u0000\u0000_U\u0001\u0000\u0000\u0000"+
		"_W\u0001\u0000\u0000\u0000_Y\u0001\u0000\u0000\u0000_Z\u0001\u0000\u0000"+
		"\u0000_\\\u0001\u0000\u0000\u0000_]\u0001\u0000\u0000\u0000`\u0018\u0001"+
		"\u0000\u0000\u0000ab\u0005a\u0000\u0000bc\u0005n\u0000\u0000cg\u0005d"+
		"\u0000\u0000de\u0005o\u0000\u0000eg\u0005r\u0000\u0000fa\u0001\u0000\u0000"+
		"\u0000fd\u0001\u0000\u0000\u0000g\u001a\u0001\u0000\u0000\u0000hi\u0005"+
		"n\u0000\u0000ij\u0005o\u0000\u0000jk\u0005t\u0000\u0000k\u001c\u0001\u0000"+
		"\u0000\u0000lm\u0005w\u0000\u0000mn\u0005h\u0000\u0000no\u0005i\u0000"+
		"\u0000op\u0005l\u0000\u0000pq\u0005e\u0000\u0000q\u001e\u0001\u0000\u0000"+
		"\u0000rs\u0005f\u0000\u0000st\u0005o\u0000\u0000tu\u0005r\u0000\u0000"+
		"u \u0001\u0000\u0000\u0000vx\u0005-\u0000\u0000wv\u0001\u0000\u0000\u0000"+
		"wx\u0001\u0000\u0000\u0000xz\u0001\u0000\u0000\u0000y{\u0007\u0001\u0000"+
		"\u0000zy\u0001\u0000\u0000\u0000{|\u0001\u0000\u0000\u0000|z\u0001\u0000"+
		"\u0000\u0000|}\u0001\u0000\u0000\u0000}\u0084\u0001\u0000\u0000\u0000"+
		"~\u0080\u0005.\u0000\u0000\u007f\u0081\u0007\u0001\u0000\u0000\u0080\u007f"+
		"\u0001\u0000\u0000\u0000\u0081\u0082\u0001\u0000\u0000\u0000\u0082\u0080"+
		"\u0001\u0000\u0000\u0000\u0082\u0083\u0001\u0000\u0000\u0000\u0083\u0085"+
		"\u0001\u0000\u0000\u0000\u0084~\u0001\u0000\u0000\u0000\u0084\u0085\u0001"+
		"\u0000\u0000\u0000\u0085\"\u0001\u0000\u0000\u0000\u0086\u0087\u0005T"+
		"\u0000\u0000\u0087\u0088\u0005r\u0000\u0000\u0088\u0089\u0005u\u0000\u0000"+
		"\u0089\u0090\u0005e\u0000\u0000\u008a\u008b\u0005F\u0000\u0000\u008b\u008c"+
		"\u0005a\u0000\u0000\u008c\u008d\u0005l\u0000\u0000\u008d\u008e\u0005s"+
		"\u0000\u0000\u008e\u0090\u0005e\u0000\u0000\u008f\u0086\u0001\u0000\u0000"+
		"\u0000\u008f\u008a\u0001\u0000\u0000\u0000\u0090$\u0001\u0000\u0000\u0000"+
		"\u0091\u0096\u0005\"\u0000\u0000\u0092\u0095\u0003\'\u0013\u0000\u0093"+
		"\u0095\b\u0002\u0000\u0000\u0094\u0092\u0001\u0000\u0000\u0000\u0094\u0093"+
		"\u0001\u0000\u0000\u0000\u0095\u0098\u0001\u0000\u0000\u0000\u0096\u0094"+
		"\u0001\u0000\u0000\u0000\u0096\u0097\u0001\u0000\u0000\u0000\u0097\u0099"+
		"\u0001\u0000\u0000\u0000\u0098\u0096\u0001\u0000\u0000\u0000\u0099\u00a4"+
		"\u0005\"\u0000\u0000\u009a\u009f\u0005\'\u0000\u0000\u009b\u009e\u0003"+
		"\'\u0013\u0000\u009c\u009e\b\u0003\u0000\u0000\u009d\u009b\u0001\u0000"+
		"\u0000\u0000\u009d\u009c\u0001\u0000\u0000\u0000\u009e\u00a1\u0001\u0000"+
		"\u0000\u0000\u009f\u009d\u0001\u0000\u0000\u0000\u009f\u00a0\u0001\u0000"+
		"\u0000\u0000\u00a0\u00a2\u0001\u0000\u0000\u0000\u00a1\u009f\u0001\u0000"+
		"\u0000\u0000\u00a2\u00a4\u0005\'\u0000\u0000\u00a3\u0091\u0001\u0000\u0000"+
		"\u0000\u00a3\u009a\u0001\u0000\u0000\u0000\u00a4&\u0001\u0000\u0000\u0000"+
		"\u00a5\u00a6\u0005\\\u0000\u0000\u00a6\u00a7\u0007\u0004\u0000\u0000\u00a7"+
		"(\u0001\u0000\u0000\u0000\u00a8\u00ac\u0007\u0005\u0000\u0000\u00a9\u00ab"+
		"\u0007\u0006\u0000\u0000\u00aa\u00a9\u0001\u0000\u0000\u0000\u00ab\u00ae"+
		"\u0001\u0000\u0000\u0000\u00ac\u00aa\u0001\u0000\u0000\u0000\u00ac\u00ad"+
		"\u0001\u0000\u0000\u0000\u00ad*\u0001\u0000\u0000\u0000\u00ae\u00ac\u0001"+
		"\u0000\u0000\u0000\u00af\u00b1\u0007\u0007\u0000\u0000\u00b0\u00af\u0001"+
		"\u0000\u0000\u0000\u00b1\u00b2\u0001\u0000\u0000\u0000\u00b2\u00b0\u0001"+
		"\u0000\u0000\u0000\u00b2\u00b3\u0001\u0000\u0000\u0000\u00b3,\u0001\u0000"+
		"\u0000\u0000\u00b4\u00b6\u0005\r\u0000\u0000\u00b5\u00b4\u0001\u0000\u0000"+
		"\u0000\u00b5\u00b6\u0001\u0000\u0000\u0000\u00b6\u00ba\u0001\u0000\u0000"+
		"\u0000\u00b7\u00b9\u0007\u0007\u0000\u0000\u00b8\u00b7\u0001\u0000\u0000"+
		"\u0000\u00b9\u00bc\u0001\u0000\u0000\u0000\u00ba\u00b8\u0001\u0000\u0000"+
		"\u0000\u00ba\u00bb\u0001\u0000\u0000\u0000\u00bb\u00bd\u0001\u0000\u0000"+
		"\u0000\u00bc\u00ba\u0001\u0000\u0000\u0000\u00bd\u00c0\u0005\n\u0000\u0000"+
		"\u00be\u00c0\u0005\r\u0000\u0000\u00bf\u00b5\u0001\u0000\u0000\u0000\u00bf"+
		"\u00be\u0001\u0000\u0000\u0000\u00c0.\u0001\u0000\u0000\u0000\u0013\u0000"+
		"8_fw|\u0082\u0084\u008f\u0094\u0096\u009d\u009f\u00a3\u00ac\u00b2\u00b5"+
		"\u00ba\u00bf\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}