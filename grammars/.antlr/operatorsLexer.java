// Generated from /home/phantom/OneDrive_personal/Documents/School/PoPL/Project/grammars/operators.g4 by ANTLR 4.13.1
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue", "this-escape"})
public class operatorsLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.13.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		ASSIGNMENT_OP=1, ARITHMETIC_OP=2, LBRACKET=3, RBRACKET=4, COMMA=5, IF=6, 
		ELIF=7, ELSE=8, COLON=9, LPAREN=10, RPAREN=11, COMPARISON_OP=12, LOGICAL_OP=13, 
		NOT_OP=14, WHILE=15, FOR=16, NUMBER=17, BOOLEAN=18, STRING=19, ESC=20, 
		VARIABLE=21, WS=22;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"ASSIGNMENT_OP", "ARITHMETIC_OP", "LBRACKET", "RBRACKET", "COMMA", "IF", 
			"ELIF", "ELSE", "COLON", "LPAREN", "RPAREN", "COMPARISON_OP", "LOGICAL_OP", 
			"NOT_OP", "WHILE", "FOR", "NUMBER", "BOOLEAN", "STRING", "ESC", "VARIABLE", 
			"WS"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, null, null, "'['", "']'", "','", "'if'", "'elif'", "'else'", "':'", 
			"'('", "')'", null, null, "'not'", "'while'", "'for'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "ASSIGNMENT_OP", "ARITHMETIC_OP", "LBRACKET", "RBRACKET", "COMMA", 
			"IF", "ELIF", "ELSE", "COLON", "LPAREN", "RPAREN", "COMPARISON_OP", "LOGICAL_OP", 
			"NOT_OP", "WHILE", "FOR", "NUMBER", "BOOLEAN", "STRING", "ESC", "VARIABLE", 
			"WS"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public operatorsLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "operators.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000\u0016\u00b2\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002"+
		"\u0001\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002"+
		"\u0004\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002"+
		"\u0007\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002"+
		"\u000b\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e"+
		"\u0002\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011"+
		"\u0002\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014"+
		"\u0002\u0015\u0007\u0015\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000"+
		"\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0003\u0000"+
		"7\b\u0000\u0001\u0001\u0001\u0001\u0001\u0002\u0001\u0002\u0001\u0003"+
		"\u0001\u0003\u0001\u0004\u0001\u0004\u0001\u0005\u0001\u0005\u0001\u0005"+
		"\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0007"+
		"\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\b\u0001\b\u0001"+
		"\t\u0001\t\u0001\n\u0001\n\u0001\u000b\u0001\u000b\u0001\u000b\u0001\u000b"+
		"\u0001\u000b\u0001\u000b\u0001\u000b\u0001\u000b\u0001\u000b\u0001\u000b"+
		"\u0003\u000b^\b\u000b\u0001\f\u0001\f\u0001\f\u0001\f\u0001\f\u0003\f"+
		"e\b\f\u0001\r\u0001\r\u0001\r\u0001\r\u0001\u000e\u0001\u000e\u0001\u000e"+
		"\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000f\u0001\u000f\u0001\u000f"+
		"\u0001\u000f\u0001\u0010\u0003\u0010v\b\u0010\u0001\u0010\u0004\u0010"+
		"y\b\u0010\u000b\u0010\f\u0010z\u0001\u0010\u0001\u0010\u0004\u0010\u007f"+
		"\b\u0010\u000b\u0010\f\u0010\u0080\u0003\u0010\u0083\b\u0010\u0001\u0011"+
		"\u0001\u0011\u0001\u0011\u0001\u0011\u0001\u0011\u0001\u0011\u0001\u0011"+
		"\u0001\u0011\u0001\u0011\u0003\u0011\u008e\b\u0011\u0001\u0012\u0001\u0012"+
		"\u0001\u0012\u0005\u0012\u0093\b\u0012\n\u0012\f\u0012\u0096\t\u0012\u0001"+
		"\u0012\u0001\u0012\u0001\u0012\u0001\u0012\u0005\u0012\u009c\b\u0012\n"+
		"\u0012\f\u0012\u009f\t\u0012\u0001\u0012\u0003\u0012\u00a2\b\u0012\u0001"+
		"\u0013\u0001\u0013\u0001\u0013\u0001\u0014\u0001\u0014\u0005\u0014\u00a9"+
		"\b\u0014\n\u0014\f\u0014\u00ac\t\u0014\u0001\u0015\u0004\u0015\u00af\b"+
		"\u0015\u000b\u0015\f\u0015\u00b0\u0000\u0000\u0016\u0001\u0001\u0003\u0002"+
		"\u0005\u0003\u0007\u0004\t\u0005\u000b\u0006\r\u0007\u000f\b\u0011\t\u0013"+
		"\n\u0015\u000b\u0017\f\u0019\r\u001b\u000e\u001d\u000f\u001f\u0010!\u0011"+
		"#\u0012%\u0013\'\u0014)\u0015+\u0016\u0001\u0000\b\u0004\u0000%%*+--/"+
		"/\u0001\u000009\u0002\u0000\"\"\\\\\u0002\u0000\'\'\\\\\b\u0000\"\"\'"+
		"\'\\\\bbffnnrrtt\u0003\u0000AZ__az\u0004\u000009AZ__az\u0001\u0000  \u00c7"+
		"\u0000\u0001\u0001\u0000\u0000\u0000\u0000\u0003\u0001\u0000\u0000\u0000"+
		"\u0000\u0005\u0001\u0000\u0000\u0000\u0000\u0007\u0001\u0000\u0000\u0000"+
		"\u0000\t\u0001\u0000\u0000\u0000\u0000\u000b\u0001\u0000\u0000\u0000\u0000"+
		"\r\u0001\u0000\u0000\u0000\u0000\u000f\u0001\u0000\u0000\u0000\u0000\u0011"+
		"\u0001\u0000\u0000\u0000\u0000\u0013\u0001\u0000\u0000\u0000\u0000\u0015"+
		"\u0001\u0000\u0000\u0000\u0000\u0017\u0001\u0000\u0000\u0000\u0000\u0019"+
		"\u0001\u0000\u0000\u0000\u0000\u001b\u0001\u0000\u0000\u0000\u0000\u001d"+
		"\u0001\u0000\u0000\u0000\u0000\u001f\u0001\u0000\u0000\u0000\u0000!\u0001"+
		"\u0000\u0000\u0000\u0000#\u0001\u0000\u0000\u0000\u0000%\u0001\u0000\u0000"+
		"\u0000\u0000\'\u0001\u0000\u0000\u0000\u0000)\u0001\u0000\u0000\u0000"+
		"\u0000+\u0001\u0000\u0000\u0000\u00016\u0001\u0000\u0000\u0000\u00038"+
		"\u0001\u0000\u0000\u0000\u0005:\u0001\u0000\u0000\u0000\u0007<\u0001\u0000"+
		"\u0000\u0000\t>\u0001\u0000\u0000\u0000\u000b@\u0001\u0000\u0000\u0000"+
		"\rC\u0001\u0000\u0000\u0000\u000fH\u0001\u0000\u0000\u0000\u0011M\u0001"+
		"\u0000\u0000\u0000\u0013O\u0001\u0000\u0000\u0000\u0015Q\u0001\u0000\u0000"+
		"\u0000\u0017]\u0001\u0000\u0000\u0000\u0019d\u0001\u0000\u0000\u0000\u001b"+
		"f\u0001\u0000\u0000\u0000\u001dj\u0001\u0000\u0000\u0000\u001fp\u0001"+
		"\u0000\u0000\u0000!u\u0001\u0000\u0000\u0000#\u008d\u0001\u0000\u0000"+
		"\u0000%\u00a1\u0001\u0000\u0000\u0000\'\u00a3\u0001\u0000\u0000\u0000"+
		")\u00a6\u0001\u0000\u0000\u0000+\u00ae\u0001\u0000\u0000\u0000-7\u0005"+
		"=\u0000\u0000./\u0005+\u0000\u0000/7\u0005=\u0000\u000001\u0005-\u0000"+
		"\u000017\u0005=\u0000\u000023\u0005*\u0000\u000037\u0005=\u0000\u0000"+
		"45\u0005/\u0000\u000057\u0005=\u0000\u00006-\u0001\u0000\u0000\u00006"+
		".\u0001\u0000\u0000\u000060\u0001\u0000\u0000\u000062\u0001\u0000\u0000"+
		"\u000064\u0001\u0000\u0000\u00007\u0002\u0001\u0000\u0000\u000089\u0007"+
		"\u0000\u0000\u00009\u0004\u0001\u0000\u0000\u0000:;\u0005[\u0000\u0000"+
		";\u0006\u0001\u0000\u0000\u0000<=\u0005]\u0000\u0000=\b\u0001\u0000\u0000"+
		"\u0000>?\u0005,\u0000\u0000?\n\u0001\u0000\u0000\u0000@A\u0005i\u0000"+
		"\u0000AB\u0005f\u0000\u0000B\f\u0001\u0000\u0000\u0000CD\u0005e\u0000"+
		"\u0000DE\u0005l\u0000\u0000EF\u0005i\u0000\u0000FG\u0005f\u0000\u0000"+
		"G\u000e\u0001\u0000\u0000\u0000HI\u0005e\u0000\u0000IJ\u0005l\u0000\u0000"+
		"JK\u0005s\u0000\u0000KL\u0005e\u0000\u0000L\u0010\u0001\u0000\u0000\u0000"+
		"MN\u0005:\u0000\u0000N\u0012\u0001\u0000\u0000\u0000OP\u0005(\u0000\u0000"+
		"P\u0014\u0001\u0000\u0000\u0000QR\u0005)\u0000\u0000R\u0016\u0001\u0000"+
		"\u0000\u0000ST\u0005=\u0000\u0000T^\u0005=\u0000\u0000UV\u0005!\u0000"+
		"\u0000V^\u0005=\u0000\u0000W^\u0005<\u0000\u0000XY\u0005<\u0000\u0000"+
		"Y^\u0005=\u0000\u0000Z^\u0005>\u0000\u0000[\\\u0005>\u0000\u0000\\^\u0005"+
		"=\u0000\u0000]S\u0001\u0000\u0000\u0000]U\u0001\u0000\u0000\u0000]W\u0001"+
		"\u0000\u0000\u0000]X\u0001\u0000\u0000\u0000]Z\u0001\u0000\u0000\u0000"+
		"][\u0001\u0000\u0000\u0000^\u0018\u0001\u0000\u0000\u0000_`\u0005a\u0000"+
		"\u0000`a\u0005n\u0000\u0000ae\u0005d\u0000\u0000bc\u0005o\u0000\u0000"+
		"ce\u0005r\u0000\u0000d_\u0001\u0000\u0000\u0000db\u0001\u0000\u0000\u0000"+
		"e\u001a\u0001\u0000\u0000\u0000fg\u0005n\u0000\u0000gh\u0005o\u0000\u0000"+
		"hi\u0005t\u0000\u0000i\u001c\u0001\u0000\u0000\u0000jk\u0005w\u0000\u0000"+
		"kl\u0005h\u0000\u0000lm\u0005i\u0000\u0000mn\u0005l\u0000\u0000no\u0005"+
		"e\u0000\u0000o\u001e\u0001\u0000\u0000\u0000pq\u0005f\u0000\u0000qr\u0005"+
		"o\u0000\u0000rs\u0005r\u0000\u0000s \u0001\u0000\u0000\u0000tv\u0005-"+
		"\u0000\u0000ut\u0001\u0000\u0000\u0000uv\u0001\u0000\u0000\u0000vx\u0001"+
		"\u0000\u0000\u0000wy\u0007\u0001\u0000\u0000xw\u0001\u0000\u0000\u0000"+
		"yz\u0001\u0000\u0000\u0000zx\u0001\u0000\u0000\u0000z{\u0001\u0000\u0000"+
		"\u0000{\u0082\u0001\u0000\u0000\u0000|~\u0005.\u0000\u0000}\u007f\u0007"+
		"\u0001\u0000\u0000~}\u0001\u0000\u0000\u0000\u007f\u0080\u0001\u0000\u0000"+
		"\u0000\u0080~\u0001\u0000\u0000\u0000\u0080\u0081\u0001\u0000\u0000\u0000"+
		"\u0081\u0083\u0001\u0000\u0000\u0000\u0082|\u0001\u0000\u0000\u0000\u0082"+
		"\u0083\u0001\u0000\u0000\u0000\u0083\"\u0001\u0000\u0000\u0000\u0084\u0085"+
		"\u0005T\u0000\u0000\u0085\u0086\u0005r\u0000\u0000\u0086\u0087\u0005u"+
		"\u0000\u0000\u0087\u008e\u0005e\u0000\u0000\u0088\u0089\u0005F\u0000\u0000"+
		"\u0089\u008a\u0005a\u0000\u0000\u008a\u008b\u0005l\u0000\u0000\u008b\u008c"+
		"\u0005s\u0000\u0000\u008c\u008e\u0005e\u0000\u0000\u008d\u0084\u0001\u0000"+
		"\u0000\u0000\u008d\u0088\u0001\u0000\u0000\u0000\u008e$\u0001\u0000\u0000"+
		"\u0000\u008f\u0094\u0005\"\u0000\u0000\u0090\u0093\u0003\'\u0013\u0000"+
		"\u0091\u0093\b\u0002\u0000\u0000\u0092\u0090\u0001\u0000\u0000\u0000\u0092"+
		"\u0091\u0001\u0000\u0000\u0000\u0093\u0096\u0001\u0000\u0000\u0000\u0094"+
		"\u0092\u0001\u0000\u0000\u0000\u0094\u0095\u0001\u0000\u0000\u0000\u0095"+
		"\u0097\u0001\u0000\u0000\u0000\u0096\u0094\u0001\u0000\u0000\u0000\u0097"+
		"\u00a2\u0005\"\u0000\u0000\u0098\u009d\u0005\'\u0000\u0000\u0099\u009c"+
		"\u0003\'\u0013\u0000\u009a\u009c\b\u0003\u0000\u0000\u009b\u0099\u0001"+
		"\u0000\u0000\u0000\u009b\u009a\u0001\u0000\u0000\u0000\u009c\u009f\u0001"+
		"\u0000\u0000\u0000\u009d\u009b\u0001\u0000\u0000\u0000\u009d\u009e\u0001"+
		"\u0000\u0000\u0000\u009e\u00a0\u0001\u0000\u0000\u0000\u009f\u009d\u0001"+
		"\u0000\u0000\u0000\u00a0\u00a2\u0005\'\u0000\u0000\u00a1\u008f\u0001\u0000"+
		"\u0000\u0000\u00a1\u0098\u0001\u0000\u0000\u0000\u00a2&\u0001\u0000\u0000"+
		"\u0000\u00a3\u00a4\u0005\\\u0000\u0000\u00a4\u00a5\u0007\u0004\u0000\u0000"+
		"\u00a5(\u0001\u0000\u0000\u0000\u00a6\u00aa\u0007\u0005\u0000\u0000\u00a7"+
		"\u00a9\u0007\u0006\u0000\u0000\u00a8\u00a7\u0001\u0000\u0000\u0000\u00a9"+
		"\u00ac\u0001\u0000\u0000\u0000\u00aa\u00a8\u0001\u0000\u0000\u0000\u00aa"+
		"\u00ab\u0001\u0000\u0000\u0000\u00ab*\u0001\u0000\u0000\u0000\u00ac\u00aa"+
		"\u0001\u0000\u0000\u0000\u00ad\u00af\u0007\u0007\u0000\u0000\u00ae\u00ad"+
		"\u0001\u0000\u0000\u0000\u00af\u00b0\u0001\u0000\u0000\u0000\u00b0\u00ae"+
		"\u0001\u0000\u0000\u0000\u00b0\u00b1\u0001\u0000\u0000\u0000\u00b1,\u0001"+
		"\u0000\u0000\u0000\u0010\u00006]duz\u0080\u0082\u008d\u0092\u0094\u009b"+
		"\u009d\u00a1\u00aa\u00b0\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}